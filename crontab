#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-

#
# 3/2018 Edoardo Marchetti
#

# Example output from agent:
# <<<crontab>>>
#         1                 4       7       10        13    16        19             22                    24
# 0 Crontab-jbpm2 - User: jbpm - m: 00 - H: 02 - DoM: * - M: * - DoW: * - Command: GestioneLog.sh - Full_Command: /opt/jbpm/SCRIPT/GestioneLog.sh >/dev/null 2>&1
# 0 Crontab-jbpm4 - User: jbpm - m: 30 - H: * - DoM: * - M: * - DoW: * - Command: list_cache.sh flush_cache.sh list_cache.sh - Full_Command: /opt/jbpm/SCRIPT/list_cache.sh >> /opt/jbpm/SCRIPT/1_list_cache.log;/opt/jbpm/SCRIPT/flush_cache.sh >> /opt/jbpm/SCRIPT/2_flush_cache.log;/opt/jbpm/SCRIPT/list_cache.sh >> /opt/jbpm/SCRIPT/1_list_cache.log
# 0 Crontab-root2 - User: root - m: 00 - H: 23 - DoM: * - M: * - DoW: 6 - Command: restartjbpm.sh - Full_Command: /root/restartjbpm.sh >/dev/null 2>&1

# inventory
def inventory_cront(checkname, info):
    inventory = []
    for line in info:
            cron = line[1]
            inventory.append( (cron, None) )
    return inventory


# check
def check_cron(item, param, info):
    for line in info:
        perfdata = []
        if line[1] == item:
            if line[0] == "0":

                comm_line = " ".join((line[3:]))
                command = comm_line[comm_line.index("Command"):comm_line.index(" - ",comm_line.index("Command"))]
                minute = comm_line[comm_line.index("m:"):comm_line.index(" - ",comm_line.index("m:"))]
                hour = comm_line[comm_line.index("H:"):comm_line.index(" - ",comm_line.index("H:"))]
                day_of_month = comm_line[comm_line.index("DoM:"):comm_line.index(" - ",comm_line.index("DoM:"))]
                month = comm_line[comm_line.index("M:"):comm_line.index(" - ",comm_line.index("M:"))]
                day_of_week = comm_line[comm_line.index("DoW:"):comm_line.index(" - ",comm_line.index("DoW:"))]
                Full_Command = comm_line[comm_line.index("Full_Command:"):]
                infotext = "%s (%s - %s - %s - %s - %s)" %(command,minute,hour,day_of_month,month,day_of_week)
                return (0, "OK - " + infotext)

            elif line[0] == "2":
                return (2, "CRITICAL - Crontab modificato ")
            elif line[0] == "1":
                return (0, "OK - No Crontab for this host" )
    return (3, "UNKNOWN - %s not found in agent output" % item) 

# declare the check to Check_MK
check_info['crontab'] = \
        (check_cron, "%s", 1, inventory_cront)
